#! /usr/bin/env python
from pathlib import Path
from argparse import ArgumentParser
from io import BufferedWriter

from PIL import Image

DIR = Path(__file__).parent

def convert_image(image: Image.Image, outfile: BufferedWriter):
    palette = get_palette()
    image = image.resize((128, 75))
    image = image.quantize(colors=64, palette=palette, dither=Image.FLOYDSTEINBERG)
    image.save(DIR/'resize.png')
    pixels = image.load()
    for y in range(75):
        for x in range(128):
            outfile.write(pixels[x, y].to_bytes(1, 'little'))

def get_palette():
    palette_bytes = bytes([
        0x00, 0x00, 0x00,
        0x00, 0x00, 0x55,
        0x00, 0x00, 0xaa,
        0x00, 0x00, 0xff,
        0x00, 0x55, 0x00,
        0x00, 0x55, 0x55,
        0x00, 0x55, 0xaa,
        0x00, 0x55, 0xff,
        0x00, 0xaa, 0x00,
        0x00, 0xaa, 0x55,
        0x00, 0xaa, 0xaa,
        0x00, 0xaa, 0xff,
        0x00, 0xff, 0x00,
        0x00, 0xff, 0x55,
        0x00, 0xff, 0xaa,
        0x00, 0xff, 0xff,
        0x55, 0x00, 0x00,
        0x55, 0x00, 0x55,
        0x55, 0x00, 0xaa,
        0x55, 0x00, 0xff,
        0x55, 0x55, 0x00,
        0x55, 0x55, 0x55,
        0x55, 0x55, 0xaa,
        0x55, 0x55, 0xff,
        0x55, 0xaa, 0x00,
        0x55, 0xaa, 0x55,
        0x55, 0xaa, 0xaa,
        0x55, 0xaa, 0xff,
        0x55, 0xff, 0x00,
        0x55, 0xff, 0x55,
        0x55, 0xff, 0xaa,
        0x55, 0xff, 0xff,
        0xaa, 0x00, 0x00,
        0xaa, 0x00, 0x55,
        0xaa, 0x00, 0xaa,
        0xaa, 0x00, 0xff,
        0xaa, 0x55, 0x00,
        0xaa, 0x55, 0x55,
        0xaa, 0x55, 0xaa,
        0xaa, 0x55, 0xff,
        0xaa, 0xaa, 0x00,
        0xaa, 0xaa, 0x55,
        0xaa, 0xaa, 0xaa,
        0xaa, 0xaa, 0xff,
        0xaa, 0xff, 0x00,
        0xaa, 0xff, 0x55,
        0xaa, 0xff, 0xaa,
        0xaa, 0xff, 0xff,
        0xff, 0x00, 0x00,
        0xff, 0x00, 0x55,
        0xff, 0x00, 0xaa,
        0xff, 0x00, 0xff,
        0xff, 0x55, 0x00,
        0xff, 0x55, 0x55,
        0xff, 0x55, 0xaa,
        0xff, 0x55, 0xff,
        0xff, 0xaa, 0x00,
        0xff, 0xaa, 0x55,
        0xff, 0xaa, 0xaa,
        0xff, 0xaa, 0xff,
        0xff, 0xff, 0x00,
        0xff, 0xff, 0x55,
        0xff, 0xff, 0xaa,
        0xff, 0xff, 0xff,
    ] + [0,0,0] * 64 *3) # need 256 bytes total
    palette = Image.frombytes('RGB', (64*3, 1), palette_bytes)
    palette = palette.convert('P', colors=64)
    return palette


if __name__ == '__main__':
    parser = ArgumentParser(
        prog='BE VGA Card Image Converter',
        description='Converts an image to bin file compatible with Ben Eater '
            'VGA Card'
    )
    parser.add_argument('imagefile', help="name of image file")
    parser.add_argument('outfile', help="name of output file")

    args = parser.parse_args()
    image = Image.open(args.imagefile)
    with open(args.outfile, 'wb') as outfile:
        convert_image(image, outfile)